// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/terraform-provider-iosxe/internal/provider/helpers"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

type Banner struct {
	Device              types.String `tfsdk:"device"`
	Id                  types.String `tfsdk:"id"`
	ExecBanner          types.String `tfsdk:"exec_banner"`
	LoginBanner         types.String `tfsdk:"login_banner"`
	PromptTimeoutBanner types.String `tfsdk:"prompt_timeout_banner"`
	MotdBanner          types.String `tfsdk:"motd_banner"`
}

func (data Banner) getPath() string {
	return "Cisco-IOS-XE-native:native/banner"
}

func (data Banner) toBody() string {
	body := `{"` + helpers.LastElement(data.getPath()) + `":{}}`
	if !data.ExecBanner.Null && !data.ExecBanner.Unknown {
		body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"exec.banner", data.ExecBanner.Value)
	}
	if !data.LoginBanner.Null && !data.LoginBanner.Unknown {
		body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"login.banner", data.LoginBanner.Value)
	}
	if !data.PromptTimeoutBanner.Null && !data.PromptTimeoutBanner.Unknown {
		body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"prompt-timeout.banner", data.PromptTimeoutBanner.Value)
	}
	if !data.MotdBanner.Null && !data.MotdBanner.Unknown {
		body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"motd.banner", data.MotdBanner.Value)
	}
	return body
}

func (data *Banner) fromBody(res gjson.Result) {
	if value := res.Get(helpers.LastElement(data.getPath()) + "." + "exec.banner"); value.Exists() {
		data.ExecBanner.Value = value.String()
	}
	if value := res.Get(helpers.LastElement(data.getPath()) + "." + "login.banner"); value.Exists() {
		data.LoginBanner.Value = value.String()
	}
	if value := res.Get(helpers.LastElement(data.getPath()) + "." + "prompt-timeout.banner"); value.Exists() {
		data.PromptTimeoutBanner.Value = value.String()
	}
	if value := res.Get(helpers.LastElement(data.getPath()) + "." + "motd.banner"); value.Exists() {
		data.MotdBanner.Value = value.String()
	}
}

func (data *Banner) fromPlan(plan Banner) {
	data.Device = plan.Device
}

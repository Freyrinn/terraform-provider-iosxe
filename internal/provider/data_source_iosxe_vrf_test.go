// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccDataSourceIosxeVRF(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceIosxeVRFConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.iosxe_vrf.test", "description", "VRF1 description"),
					resource.TestCheckResourceAttr("data.iosxe_vrf.test", "rd", "1:1"),
					resource.TestCheckResourceAttr("data.iosxe_vrf.test", "address_family_ipv4", "true"),
					resource.TestCheckResourceAttr("data.iosxe_vrf.test", "address_family_ipv6", "true"),
					resource.TestCheckResourceAttr("data.iosxe_vrf.test", "vpn_id", "1:1"),
					resource.TestCheckResourceAttr("data.iosxe_vrf.test", "route_target_import.0.value", "1:1"),
					resource.TestCheckResourceAttr("data.iosxe_vrf.test", "route_target_import.0.stitching", "false"),
					resource.TestCheckResourceAttr("data.iosxe_vrf.test", "route_target_export.0.value", "1:1"),
					resource.TestCheckResourceAttr("data.iosxe_vrf.test", "route_target_export.0.stitching", "false"),
				),
			},
		},
	})
}

const testAccDataSourceIosxeVRFConfig = `

resource "iosxe_vrf" "test" {
  name = "VRF1"
  description = "VRF1 description"
  rd = "1:1"
  address_family_ipv4 = true
  address_family_ipv6 = true
  vpn_id = "1:1"
  route_target_import = [{
    value = "1:1"
    stitching = false
  }]
  route_target_export = [{
    value = "1:1"
    stitching = false
  }]
}

data "iosxe_vrf" "test" {
  name = "VRF1"
  depends_on = [iosxe_vrf.test]
}
`
